import os
import discord
from discord.ext import commands
from dotenv import load_dotenv

import app.core.embeds as EM
from app.core import handlers
from app.core.handlers import llama_manager
from app.core.scheduler import start_scheduler
from app.data.models import init_models
from app.data.request import get_rang, save_birthday, update_message_count
from app.services.daily_report import ReportGenerator
from app.services.telegram_notifier import telegram_notifier
from app.services.weather_agent import WeatherAgent
from app.services.youtube_notifier import YouTubeNotifier
from app.tools.utils import contains_only_urls, get_rank_description

load_dotenv()

TOKEN = os.getenv("DC_TOKEN")

intents = discord.Intents.default()
intents.members = True
intents.message_content = True

bot = commands.Bot(command_prefix="!", intents=intents, help_command=None)
report_generator: ReportGenerator | None = None
weather_agent = WeatherAgent()
youtube_notifier = YouTubeNotifier(bot)


@bot.command(name="help")
async def help_command(ctx):
    """–ü–æ–∫–∞–∑–∞—Ç—å —Å–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥"""
    embed = EM.create_help_embed()
    await ctx.send(embed=embed)


@bot.command(name="rank")
async def rank_command(ctx, arg: str = None):
    """–ü–æ–∫–∞–∑–∞—Ç—å —Ä–∞–Ω–≥ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–ª–∏ —Å–ø–∏—Å–æ–∫ —Ä–∞–Ω–≥–æ–≤

    –ï—Å–ª–∏ —É–∫–∞–∑–∞–Ω –∞—Ä–≥—É–º–µ–Ω—Ç "list", –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö —Ä–∞–Ω–≥–æ–≤.
    –í –ø—Ä–æ—Ç–∏–≤–Ω–æ–º —Å–ª—É—á–∞–µ –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Ç–µ–∫—É—â–∏–π —Ä–∞–Ω–≥ –∞–≤—Ç–æ—Ä–∞ —Å–æ–æ–±—â–µ–Ω–∏—è.
    """
    if arg == "list":
        embed = EM.create_rang_list_embed()
        await ctx.send(embed=embed)
        return

    try:
        server_id = ctx.guild.id if ctx.guild else None
        message_count = await get_rang(ctx.author.id, server_id)
        rank_description = get_rank_description(int(message_count))

        avatar_url = (
            ctx.author.avatar.url
            if ctx.author.avatar
            else ctx.author.default_avatar.url
        )

        embed, file = await EM.create_rang_embed(
            ctx.author.display_name,
            message_count,
            rank_description["description"],
            avatar_url,
            server_id,
            ctx.author.id,
        )
        await ctx.send(embed=embed, file=file)
    except ValueError as ve:
        await ctx.send(str(ve))
    except Exception as e:
        await ctx.send(f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏: {e}")


@bot.command(name="birthday")
async def birthday_command(ctx, *, date: str):
    """–°–æ—Ö—Ä–∞–Ω–∏—Ç—å –¥–∞—Ç—É —Ä–æ–∂–¥–µ–Ω–∏—è

    Args:
        date: –î–∞—Ç–∞ —Ä–æ–∂–¥–µ–Ω–∏—è –≤ —Ñ–æ—Ä–º–∞—Ç–µ —Å—Ç—Ä–æ–∫–∏
    """
    try:
        await save_birthday(
            f"!birthday {date}",
            ctx.author.display_name,
            ctx.author.name,
            ctx.author.id,
        )
        await ctx.send("–î–∞—Ç–∞ —Ä–æ–∂–¥–µ–Ω–∏—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞.")
    except ValueError as ve:
        await ctx.send(str(ve))
    except Exception as e:
        await ctx.send(f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ –¥–∞—Ç—ã —Ä–æ–∂–¥–µ–Ω–∏—è: {e}")


@bot.command(name="reset")
@commands.guild_only()
async def reset_command(ctx):
    """–û—á–∏—Å—Ç–∏—Ç—å –∏—Å—Ç–æ—Ä–∏—é —Å–µ—Ä–≤–µ—Ä–∞ (—Ç–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤)"""
    answer = await handlers.clear_server_history(ctx.guild.id)
    await ctx.send(answer)


@bot.command(name="update_user")
@commands.guild_only()
@commands.has_permissions(administrator=True)
async def update_user_command(ctx):
    """–û–±–Ω–æ–≤–∏—Ç—å —Å–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —Å–µ—Ä–≤–µ—Ä–∞ (—Ç–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤)"""
    try:
        server = ctx.guild
        members = server.members
        all_server_users = [f"{member.name}" for member in members if not member.bot]

        await llama_manager.index_server_users(server.id, all_server_users)

        await ctx.send(
            f"‚úÖ –°–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —Å–µ—Ä–≤–µ—Ä–∞ –æ–±–Ω–æ–≤–ª–µ–Ω! –î–æ–±–∞–≤–ª–µ–Ω–æ {len(all_server_users)} –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π."
        )
    except Exception as e:
        await ctx.send(f"‚ùå –û—à–∏–±–∫–∞: {e}")


@bot.command(name="add_youtube")
@commands.guild_only()
@commands.has_permissions(administrator=True)
async def add_youtube_command(ctx, youtube_id: str, discord_channel_id: int, *, name: str):
    """–î–æ–±–∞–≤–∏—Ç—å YouTube –∫–∞–Ω–∞–ª –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è

    Args:
        youtube_id: ID YouTube –∫–∞–Ω–∞–ª–∞
        discord_channel_id: ID Discord –∫–∞–Ω–∞–ª–∞ –¥–ª—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
        name: –ù–∞–∑–≤–∞–Ω–∏–µ –∫–∞–Ω–∞–ª–∞
    """
    try:
        success = await youtube_notifier.add_channel(
            youtube_id, discord_channel_id, name, ctx.guild.id
        )
        if success:
            await ctx.send("‚úÖ –ö–∞–Ω–∞–ª –¥–æ–±–∞–≤–ª–µ–Ω –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è")
        else:
            await ctx.send("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –∫–∞–Ω–∞–ª–∞")
    except Exception as e:
        await ctx.send(f"‚ùå –û—à–∏–±–∫–∞: {e}")


@bot.command(name="weather")
async def weather_command(ctx, *, location: str):
    """–ü–æ–ª—É—á–∏—Ç—å –ø–æ–≥–æ–¥—É –¥–ª—è —É–∫–∞–∑–∞–Ω–Ω–æ–≥–æ –º–µ—Å—Ç–∞

    Args:
        location: –ú–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ —Å –≤–æ–∑–º–æ–∂–Ω—ã–º —Ñ–ª–∞–≥–æ–º "–∑–∞–≤—Ç—Ä–∞"
    """
    flag = "–∑–∞–≤—Ç—Ä–∞" in location.lower()
    is_weather, city = await weather_agent.should_handle_weather(location)

    if is_weather and city:
        weather_info = weather_agent.get_weather(city, flag)
        await ctx.send(weather_info)
    else:
        await ctx.send("–ù–µ —É–¥–∞–ª–æ—Å—å –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ –¥–ª—è –ø—Ä–æ–≥–Ω–æ–∑–∞ –ø–æ–≥–æ–¥—ã")


@bot.event
async def on_ready():
    """–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–∏ –±–æ—Ç–∞ –∫ Discord"""
    await init_models()
    global report_generator
    report_generator = ReportGenerator(bot)
    start_scheduler(bot)
    print("–ë–æ—Ç —É—Å–ø–µ—à–Ω–æ –ø–æ–¥–∫–ª—é—á–∏–ª—Å—è –∫ Discord")


@bot.event
async def on_disconnect():
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—Ç–∫–ª—é—á–µ–Ω–∏—è –æ—Ç Discord"""
    print("–ë–æ—Ç –æ—Ç–∫–ª—é—á–∏–ª—Å—è –æ—Ç Discord")
    await telegram_notifier.send_message(
        "‚ö†Ô∏è <b>Discord –±–æ—Ç –æ—Ç–∫–ª—é—á–∏–ª—Å—è</b>\n–°–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —Å Discord –ø–æ—Ç–µ—Ä—è–Ω–æ"
    )


@bot.event
async def on_resumed():
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è —Å Discord"""
    print("–°–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —Å Discord –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ")
    await telegram_notifier.send_message(
        "‚úÖ <b>Discord –±–æ—Ç –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–∏–ª —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ</b>\n–†–∞–±–æ—Ç–∞ –ø—Ä–æ–¥–æ–ª–∂–∞–µ—Ç—Å—è"
    )


@bot.event
async def on_command_error(ctx, error):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫ –∫–æ–º–∞–Ω–¥

    Args:
        ctx: –ö–æ–Ω—Ç–µ–∫—Å—Ç –∫–æ–º–∞–Ω–¥—ã
        error: –í–æ–∑–Ω–∏–∫—à–∞—è –æ—à–∏–±–∫–∞
    """
    if isinstance(error, commands.CommandNotFound):
        server_id = ctx.guild.id if ctx.guild else None
        response = await handlers.ai_generate(ctx.message.content, server_id, ctx.author)
        await ctx.send(f"{ctx.author.mention} {response}")
    elif isinstance(error, commands.MissingPermissions):
        await ctx.send("‚ùå –£ –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã.")
    elif isinstance(error, commands.MissingRequiredArgument):
        await ctx.send(
            f"‚ùå –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –∫–æ–º–∞–Ω–¥—ã. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ: `!{ctx.command.name} {ctx.command.signature}`")
    elif isinstance(error, commands.NoPrivateMessage):
        await ctx.send("‚ùå –≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞ –≤ –ª–∏—á–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏—è—Ö.")
    else:
        await ctx.send("‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã.")
        print(f"Command error: {error}")


@bot.event
async def on_message(message):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—Ö–æ–¥—è—â–∏—Ö —Å–æ–æ–±—â–µ–Ω–∏–π

    Args:
        message: –û–±—ä–µ–∫—Ç —Å–æ–æ–±—â–µ–Ω–∏—è Discord
    """
    global report_generator
    server_id = message.guild.id if message.guild else None

    if message.author.bot:
        return

    if len(message.content) > 1000:
        if message.content.startswith("!"):
            await message.channel.send(
                f"–°–æ–æ–±—â–µ–Ω–∏–µ —Å–ª–∏—à–∫–æ–º –¥–ª–∏–Ω–Ω–æ–µ: {len(message.content)} —Å–∏–º–≤–æ–ª–æ–≤! –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è –¥–ª–∏–Ω–∞ - 1000 —Å–∏–º–≤–æ–ª–æ–≤."
            )
        return

    if not message.content.startswith("!"):
        try:
            rank_info = await update_message_count(message.author.id, message.author.name, server_id)

            if rank_info["rank_up"]:
                new_rank_description = get_rank_description(rank_info["message_count"])
                avatar_url = (
                    message.author.avatar.url
                    if message.author.avatar
                    else message.author.default_avatar.url
                )

                embed, file = await EM.create_rang_embed(
                    message.author.display_name,
                    rank_info["message_count"],
                    new_rank_description["description"],
                    avatar_url,
                    server_id,
                    message.author.id,
                )

                await message.channel.send(
                    f"üéâ **{message.author.mention}** –ø–æ–≤—ã—Å–∏–ª —Å–≤–æ–π —Ä–∞–Ω–≥!", embed=embed, file=file
                )

        except Exception as e:
            print(f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏: {e}")

        if not message.content.strip():
            return

        if contains_only_urls(message.content):
            return

        if report_generator is not None:
            await report_generator.add_message(
                message.channel.id,
                message.content,
                message.author.display_name,
                message.id,
            )
        return

    await bot.process_commands(message)


bot.run(TOKEN)
